/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Layer Definitions

#define DEFAULT 0
#define NAV 1
#define NUM 2
#define FN 3

// Behavior configuration

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
};

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        tdb: td_brackets {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        tdm: td_marks {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp EXCL>, <&kp QUESTION>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            // ----------------------------------------------------------------------------------------------------------------
            // | ESC  |   Q    |   W   |   E   |     R     |    T    | # |    Y     |    U     |   I   |   O   |   P    | NUM |
            // | TAB  | A/CTRL | S/OPT | D/CMD |  F/LSHFT  |    G    | # |    H     |  J/SHFT  | K/CMD | L/OPT | ;/CTRL |  '  |
            // | LANG |   Z    |   X   |   C   |     V     |    B    | # |    N     |    M     |   ,   |   .   |   /    |  \  |
            //                         |  ESC  | SPACE/NUM | TAB/CMD | # | ENTER/FN | BSPC/NAV |  DEL  |

            bindings = <
&kp ESCAPE         &kp Q        &kp W       &kp E       &kp R        &kp T           &kp Y        &kp U        &kp I           &kp O       &kp P           &tog 2
&kp TAB            &mt LCTRL A  &mt LALT S  &mt LGUI D  &mt LSHFT F  &kp G           &kp H        &mt LSHFT J  &mt LEFT_GUI K  &mt LALT L  &mt LCTRL SEMI  &kp SINGLE_QUOTE
&kp LA(LC(SPACE))  &kp Z        &kp X       &kp C       &kp V        &kp B           &kp N        &kp M        &kp COMMA       &kp DOT     &kp FSLH        &kp BSLH
                                            &kp ESCAPE  &lt 2 SPACE  &mt LGUI TAB    &lt 3 ENTER  &lt 1 BSPC   &kp DEL
            >;
        };

        navigation {
            // --------------------------------------------------------------------------------------------
            // |     |       |      |       |       |     | # | SWTCH | HOME |  UP  |  END  | PGUP  |     |
            // |     | LCTRL | LOPT | LCOMM | LSHFT |     | # | GLOBE | LEFT | DOWN | RIGHT | PGDN  |     |
            // |     |       | ROPT |       |       |     | # |       |      |      |       |       |     |
            //                      |       |       |     | # |       | HELD |      |

            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans    &kp LG(GRAVE)  &kp HOME  &kp UP    &kp END    &kp PG_UP  &trans
&trans  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans    &kp GLOBE      &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN  &trans
&trans  &trans     &kp RALT  &trans    &trans     &trans    &none          &none     &none     &trans     &trans     &trans
                             &trans    &trans     &trans    &trans         &trans    &trans
            >;
        };

        numbers {
            // ----------------------------------------------------------------------------------------------------
            // |     |    !    |    @   |    {    |    }    |   %   | # |   =   |  7   |  8   |   9   |  *  |     |
            // |     | ^/LCTRL | &/LOPT | (/LCOMM | )/LSHFT |   _   | # |   -   |  4   |  5   |   6   |  :  |     |
            // |     |    #    |    $   |    [    |    ]    |   `   | # |   +   |  1   |  2/, |  3/.  |  /  |  \  |
            //                          |   ESC   |  HELD   |  TAB  | # | ENTER | BSPC |  0   |

            bindings = <
&trans  &tdm             &kp AT         &kp LEFT_BRACE             &kp RIGHT_BRACE              &kp PRCNT    &kp EQUAL  &kp N7  &kp N8        &kp N9      &kp ASTERISK  &trans
&trans  &mt LCTRL CARET  &mt LALT AMPS  &mt LGUI LEFT_PARENTHESIS  &mt LSHFT RIGHT_PARENTHESIS  &kp UNDER    &kp MINUS  &kp N4  &kp N5        &kp N6      &kp COLON     &trans
&trans  &kp HASH         &kp DOLLAR     &kp LEFT_BRACKET           &kp RIGHT_BRACKET            &kp GRAVE    &kp PLUS   &kp N1  &mt COMMA N2  &mt DOT N3  &kp SLASH     &kp BACKSLASH
                                        &trans                     &trans                       &trans       &trans     &trans  &kp N0
            >;
        };

        function {
            // --------------------------------------------------------------------------------------------
            // |     |       |      |       |       |     | # |  F12  |  F7  |  F8  |  F9  | LOCK  |      |
            // |     | LCTRL | LOPT | LCOMM | LSHFT |     | # |  F11  |  F4  |  F5  |  F6  | PSCRN | CAPS |
            // |     |       | ROPT |       |       |     | # |  F10  |  F1  |  F2  |  F3  |       |      |
            //                      |       |       |     | # | HELD  |      |      |

            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans    &kp F12  &kp F7  &kp F8  &kp F9  &kp LG(LC(Q))       &trans
&trans  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans    &kp F11  &kp F4  &kp F5  &kp F6  &kp LS(LC(LG(N4)))  &kp CAPS
&trans  &trans     &kp RALT  &trans    &trans     &trans    &kp F10  &kp F1  &kp F2  &kp F3  &trans              &trans
                             &trans    &trans     &trans    &trans   &trans  &trans
            >;
        };
    };
};
